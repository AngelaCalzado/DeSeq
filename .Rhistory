# Store the calculated Z-score in the vector
z_scores[i] <- z_score
}
colnamesÃ§8cats
colnames(cats)
View(cats)
# Iterate through each row of 'cats' and calculate the Z-score
for (i in 1:nrow(cats)) {
# Extract the list of genes in the current term and split it into a vector
genes_in_term <- unlist(strsplit(cats$gene[i], "/"))
# Filter 'allgenes' to get log2 fold changes for genes in the current term
log2foldchanges_in_term <- allgenes$logFC[allgenes$gene %in% genes_in_term]
# Calculate the Z-score for the term
upregulated_count <- sum(log2foldchanges_in_term > 0)
downregulated_count <- sum(log2foldchanges_in_term < 0)
set_size <- length(log2foldchanges_in_term)
z_score <- (upregulated_count - downregulated_count) / sqrt(set_size)
# Store the calculated Z-score in the vector
z_scores[i] <- z_score
}
View(allgenes)
# Add the Z-scores to the 'cats' data frame
cats$ZScore <- z_scores
#Relate to the circ data frame
circ0$zscore <- cats$ZScore[cats$term == circ0$term]
circ <- circ0
jpeg(file = 'prueba.jpeg', units = 'in', width = 15, height = 20, res = 300)
par(mar = c(2, 2, 2, 5))
GOBubble(circ, labels = 2.5, colour = colores, ID =T, table.col=F, table.legend = F)
colores <- c('red', 'green', 'blue', 'orange', 'yellow')
invisible(dev.off())
jpeg(file = 'prueba.jpeg', units = 'in', width = 15, height = 20, res = 300)
par(mar = c(2, 2, 2, 5))
GOBubble(circ, labels = 2.5, colour = colores, ID =T, table.col=F, table.legend = F)
invisible(dev.off())
trace(GOBubble, edit =T)
jpeg(file = 'prueba2.jpeg', units = 'in', width = 15, height = 20, res = 300)
par(mar = c(2, 2, 2, 5))
GOBubble(circ, labels = 2.5, colour = colores, ID =T, table.col=F, table.legend = F)
invisible(dev.off())
install.packages("ggVennDiagram")
library(ggVennDiagram)
library(ggplot2)
category <- "C2_KEGG"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
View(all)
cat_males <- row.names(males)
cat_females <- row.names(females)
cat_all <-row.names(all)
# Diagrama de Venn
data <- list(Males = cat_males, Females = cat_females, All = cat_all)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
males_all <- intersect(rownames(males), rownames(all))
females_all <- intersect(rownames(females), rownames(all))
males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_BP"
category <- "C5_BP"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
cat_all <-row.names(all)
# Diagrama de Venn
data <- list(Males = cat_males, Females = cat_females, All = cat_all)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
males_all <- intersect(rownames(males), rownames(all))
females_all <- intersect(rownames(females), rownames(all))
males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_HPO"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
cat_all <-row.names(all)
# Diagrama de Venn
data <- list(Males = cat_males, Females = cat_females, All = cat_all)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
males_all <- intersect(rownames(males), rownames(all))
females_all <- intersect(rownames(females), rownames(all))
males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_MF"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
cat_all <-row.names(all)
# Diagrama de Venn
data <- list(Males = cat_males, Females = cat_females, All = cat_all)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
males_all <- intersect(rownames(males), rownames(all))
females_all <- intersect(rownames(females), rownames(all))
males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_CC"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
cat_all <-row.names(all)
# Diagrama de Venn
data <- list(Males = cat_males, Females = cat_females, All = cat_all)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
males_all <- intersect(rownames(males), rownames(all))
females_all <- intersect(rownames(females), rownames(all))
males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
View(females)
View(males)
install.packages("ggVennDiagram")
library(ggVennDiagram)
library(ggplot2)
category <- "C5_CC"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
# Diagrama de Venn
#data <- list(Males = cat_males, Females = cat_females, All = cat_all)
data <- list(Males = cat_males, Females = cat_females)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
?ggsave
ggsave(paste("Venn_GSEA/", category, "_Venn_males_females.jpeg", sep = ""), Venn)
category <- "C5_MF"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
#input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
#all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
#cat_all <-row.names(all)
# Diagrama de Venn
#data <- list(Males = cat_males, Females = cat_females, All = cat_all)
data <- list(Males = cat_males, Females = cat_females)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn_males_females.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
#males_all <- intersect(rownames(males), rownames(all))
#females_all <- intersect(rownames(females), rownames(all))
#males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_HPO"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
#input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
#all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
#cat_all <-row.names(all)
# Diagrama de Venn
#data <- list(Males = cat_males, Females = cat_females, All = cat_all)
data <- list(Males = cat_males, Females = cat_females)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn_males_females.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
#males_all <- intersect(rownames(males), rownames(all))
#females_all <- intersect(rownames(females), rownames(all))
#males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C5_BP"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
#input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
#all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
#cat_all <-row.names(all)
# Diagrama de Venn
#data <- list(Males = cat_males, Females = cat_females, All = cat_all)
data <- list(Males = cat_males, Females = cat_females)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn_males_females.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
#males_all <- intersect(rownames(males), rownames(all))
#females_all <- intersect(rownames(females), rownames(all))
#males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
category <- "C2_KEGG"
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input_males <- paste("results_GSEA_males_sinFamilia/stat/", category, "/GSEA_results_males_sinFamilia.txt", sep = "")
input_females <- paste("results_GSEA_females_sinFamilia/stat/", category, "/GSEA_results_females_sinFamilia.txt", sep = "")
#input_all <- paste("results_GSEA_sinFamilia/stat/", category, "/GSEA_results_sinFamilia.txt", sep = "")
males <- read.table(input_males, header = TRUE, sep="\t", row.names = 1)
females <- read.table(input_females, header = TRUE, sep="\t", row.names = 1)
#all <- read.table(input_all, header = TRUE, sep="\t", row.names = 1)
cat_males <- row.names(males)
cat_females <- row.names(females)
#cat_all <-row.names(all)
# Diagrama de Venn
#data <- list(Males = cat_males, Females = cat_females, All = cat_all)
data <- list(Males = cat_males, Females = cat_females)
Venn <- ggVennDiagram(data)
ggsave(paste("Venn_GSEA/", category, "_Venn_males_females.jpeg", sep = ""), Venn)
# Ver que categoria tienen en comun
males_females <- intersect(rownames(males), rownames(females))
#males_all <- intersect(rownames(males), rownames(all))
#females_all <- intersect(rownames(females), rownames(all))
#males_females_all <- Reduce (intersect, list(rownames(males), rownames(females), rownames(all)))
common_males <- males[row.names(males) %in% males_females, ]
write.table(common_males, file = paste("Venn_GSEA/", category,"_common_males.tsv"), sep = "\t", row.names = TRUE)
common_females <- females[row.names(females) %in% males_females, ]
write.table(common_females, file = paste("Venn_GSEA/", category,"_common_females.tsv"), sep = "\t", row.names = TRUE)
library('dplyr')
library('msigdbr')
filterF <- 'sets_common.txt'
resF <- 'validate_common_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
filterF <- 'sets_common.txt'
resF <- 'validate_common_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
colnames(filter) <- 'gs_name'
#KEGG and REACTOME
C2_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C2',
subcategory = 'KEGG')%>%
dplyr::select(gs_name, ensembl_gene))
View(C2_set)
View(filter)
#GO and HPO
GO_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C5',
subcategory = NULL)%>%
dplyr::select(gs_name, ensembl_gene))
View(GO_set)
#Hallmark
sets <- bind_rows(C2_set, GO_set)
target_sets <- merge(sets, filter, by='gs_name')
View(target_sets)
#Check merge
uni <- unique(target_sets[c('gs_name')])
dim(filter) == dim(uni)
write.table(target_sets, file = resF, sep="\t",  col.names=F, quote = F, row.names = F)
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
function (.data, ..., .by = NULL, .preserve = FALSE)
filterF <- 'sets_females.txt'
resF <- 'validate_females_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
filterF <- 'sets_females.txt'
resF <- 'validate_females_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
colnames(filter) <- 'gs_name'
#KEGG and REACTOME
C2_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C2',
subcategory = 'KEGG')%>%
dplyr::select(gs_name, ensembl_gene))
#GO and HPO
GO_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C5',
subcategory = NULL)%>%
dplyr::select(gs_name, ensembl_gene))
#Hallmark
sets <- bind_rows(C2_set, GO_set)
target_sets <- merge(sets, filter, by='gs_name')
#Check merge
uni <- unique(target_sets[c('gs_name')])
dim(filter) == dim(uni)
write.table(target_sets, file = resF, sep="\t",  col.names=F, quote = F, row.names = F)
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
filterF <- 'sets_males.txt'
resF <- 'validate_males_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
colnames(filter) <- 'gs_name'
#KEGG and REACTOME
C2_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C2',
subcategory = 'KEGG')%>%
dplyr::select(gs_name, ensembl_gene))
#GO and HPO
GO_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C5',
subcategory = NULL)%>%
dplyr::select(gs_name, ensembl_gene))
#Hallmark
sets <- bind_rows(C2_set, GO_set)
target_sets <- merge(sets, filter, by='gs_name')
#Check merge
uni <- unique(target_sets[c('gs_name')])
dim(filter) == dim(uni)
write.table(target_sets, file = resF, sep="\t",  col.names=F, quote = F, row.names = F)
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
filterF <- 'sets_all.txt'
resF <- 'validate_all_mPFC'
#Enriched categories to validate
filter <- as.data.frame(read.csv(filterF, sep = '\t', header = F)[,1])
colnames(filter) <- 'gs_name'
#KEGG and REACTOME
C2_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C2',
subcategory = 'KEGG')%>%
dplyr::select(gs_name, ensembl_gene))
#GO and HPO
GO_set <- as.data.frame(msigdbr(species = 'Homo sapiens', category = 'C5',
subcategory = NULL)%>%
dplyr::select(gs_name, ensembl_gene))
#Hallmark
sets <- bind_rows(C2_set, GO_set)
target_sets <- merge(sets, filter, by='gs_name')
#Check merge
uni <- unique(target_sets[c('gs_name')])
dim(filter) == dim(uni)
write.table(target_sets, file = resF, sep="\t",  col.names=F, quote = F, row.names = F)
read.csv('tabla_males_bubble.txt', header = T, sep="\t")
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
library(DESeq2)
library(GOplot)
read.csv('tabla_males_bubble.txt', header = T, sep="\t")
as.data.frame(read.csv('tabla_males_bubble.txt', header = T, sep="\t"))
term
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
library(DESeq2)
library(GOplot)
input <- 'DEG_results_males_sinFamilia/all_genes.csv'
res <- read.csv(input, header = TRUE, sep = ";")
colores <- c('red', 'green', 'blue', 'orange', 'yellow')
allgenes <- as.data.frame(res$log2FoldChange)
rownames(allgenes) <- res$x
colnames(allgenes) <- 'logFC'
allgenes$gene <- res$x
View(allgenes)
View(res)
#Bubble plot of 68 categories validated from GSEA
circ0 <- read.csv('tabla_males_bubble.txt', header = T, sep="\t")
#To compute the Z-score
cats <- as.data.frame(circ0$term)
View(circ0)
cats$gene <- circ0$gene
View(cats)
cats$set_size <- circ0$count
colnames(cats) <- c('term', 'gene', 'set_size')
# Create an empty vector to store Z-scores
z_scores <- numeric(nrow(cats))
# Iterate through each row of 'cats' and calculate the Z-score
for (i in 1:nrow(cats)) {
# Extract the list of genes in the current term and split it into a vector
genes_in_term <- unlist(strsplit(cats$gene[i], "/"))
# Filter 'allgenes' to get log2 fold changes for genes in the current term
log2foldchanges_in_term <- allgenes$logFC[allgenes$gene %in% genes_in_term]
# Calculate the Z-score for the term
upregulated_count <- sum(log2foldchanges_in_term > 0)
downregulated_count <- sum(log2foldchanges_in_term < 0)
set_size <- length(log2foldchanges_in_term)
z_score <- (upregulated_count - downregulated_count) / sqrt(set_size)
# Store the calculated Z-score in the vector
z_scores[i] <- z_score
}
genes_in_term
log2foldchanges_in_term
upregulated_count
downregulated_count
set_size
z-score
z-scores
# Add the Z-scores to the 'cats' data frame
cats$ZScore <- z_scores
#Relate to the circ data frame
circ0$zscore <- cats$ZScore[cats$term == circ0$term]
circ <- circ0
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input <- 'DEG_results_males_sinFamilia/sig_pval.csv'
res <- read.csv(input, header = TRUE, sep = ";")
View(res)
View(res)
res <- read.csv(input, header = TRUE, sep = ",")
View(res)
colores <- c('red', 'green', 'blue', 'orange', 'yellow')
allgenes <- as.data.frame(res$log2FoldChange)
rownames(allgenes) <- res$x
colnames(allgenes) <- 'logFC'
allgenes$gene <- res$x
View(allgenes)
rownames(allgenes) <- res$x
colnames(allgenes) <- 'logFC'
allgenes$gene <- res$x
View(allgenes)
View(res)
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input <- 'DEG_results_males_sinFamilia/all_genes.csv'
res <- read.csv(input, header = TRUE, sep = ",")
colores <- c('red', 'green', 'blue', 'orange', 'yellow')
allgenes <- as.data.frame(res$log2FoldChange)
rownames(allgenes) <- res$x
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
input <- 'DEG_results_males_sinFamilia/all_genes.csv'
res <- read.csv(input, header = TRUE, sep = ";")
colores <- c('red', 'green', 'blue', 'orange', 'yellow')
allgenes <- as.data.frame(res$log2FoldChange)
rownames(allgenes) <- res$x
colnames(allgenes) <- 'logFC'
allgenes$gene <- res$x
View(allgenes)
View(res)
head('DEG_results_males_sinFamilia/all_genes.csv')
head(DEG_results_males_sinFamilia/all_genes.csv)
read.csv('DEG_results_males_sinFamilia/all_genes.csv', header = TRUE, sep = ";")
input
input <- 'DEG_results_males_sinFamilia/sig_pval.csv'
res <- read.csv(input, header = TRUE, sep = ";")
View(res)
trace(GOBubble, edit = T)
View(res)
res <- read.csv(input, header = TRUE, sep = ",")
View(res)
