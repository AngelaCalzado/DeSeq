getwd()
suppressPackageStartupMessages({
library(rstudioapi)
library(gplots, quietly = T)
library(ggplot2, quietly = TRUE)
library(pheatmap, quietly = TRUE)
library(DESeq2, quietly = TRUE)
library('org.Hs.eg.db', quietly = TRUE, character.only = TRUE)
library(EnhancedVolcano, quietly = TRUE)
})
require("ggrepel", quietly = TRUE)
#Paths
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
getwd()
?getActiveDocumentContext
getActiveDocumentContext()
getActiveDocumentContext()$id
getActiveDocumentContext()$path
getActiveDocumentContext()$contents
rstudioapi::getActiveDocumentContext()$path
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(rstudioapi)
library(gplots, quietly = T)
library(ggplot2, quietly = TRUE)
library(pheatmap, quietly = TRUE)
library(DESeq2, quietly = TRUE)
library('org.Hs.eg.db', quietly = TRUE, character.only = TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnhancedVolcano")
suppressPackageStartupMessages({
library(rstudioapi)
library(gplots, quietly = T)
library(ggplot2, quietly = TRUE)
library(pheatmap, quietly = TRUE)
library(DESeq2, quietly = TRUE)
library('org.Hs.eg.db', quietly = TRUE, character.only = TRUE)
library(EnhancedVolcano, quietly = TRUE)
})
require("ggrepel", quietly = TRUE)
#Paths
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
#Input
configFile <- 'Archivo_configuracion_mPFC.txt'
#Outputs
resD <- 'DEG_results/'
rawCountsF <- paste0(resD,"counts_raw.tsv")
normCountsF <- paste0(resD,"counts_normalized.tsv")
PCAF <- paste0(resD,"PCA.jpeg")
distancesF <- paste0(resD,"distances.jpeg")
dispersionF <- paste0(resD,"dispersion.tiff")
MAplotF <- paste0(resD,"maplot.jpeg")
genesTSV <- paste0(resD,"all_genes.tsv")
sigTSV <- paste0(resD,"sig_pval.tsv")
sigPCAF <- paste0(resD,"PCA_sig.jpeg")
alphasigTSV <- paste0(resD,"0.05_sig_padj.tsv")
volcanoF <- paste0(resD,"volcanoPlot.jpeg")
heatmapF <- paste0(resD,"heatmap.jpeg")
DESEqResultsF <- paste0(resD, 'deseq_objects.RData')
#Parameters
cutoff <- 0.05 #significancy p value adjusted
#Paths
workingD <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(workingD))
configFile <- 'Archivo_configuracion_mPFC.txt'
#Outputs
resD <- 'DEG_results/'
rawCountsF <- paste0(resD,"counts_raw.tsv")
normCountsF <- paste0(resD,"counts_normalized.tsv")
PCAF <- paste0(resD,"PCA.jpeg")
distancesF <- paste0(resD,"distances.jpeg")
dispersionF <- paste0(resD,"dispersion.tiff")
MAplotF <- paste0(resD,"maplot.jpeg")
genesTSV <- paste0(resD,"all_genes.tsv")
sigTSV <- paste0(resD,"sig_pval.tsv")
sigPCAF <- paste0(resD,"PCA_sig.jpeg")
alphasigTSV <- paste0(resD,"0.05_sig_padj.tsv")
volcanoF <- paste0(resD,"volcanoPlot.jpeg")
heatmapF <- paste0(resD,"heatmap.jpeg")
DESEqResultsF <- paste0(resD, 'deseq_objects.RData')
sampleTable <- read.table(configFile, header=TRUE
#,colClasses= c('factor','character','factor',
#'factor','numeric',
#'factor','factor')
)
View(sampleTable)
sampleTable <- read.table(configFile, header=TRUE
#,colClasses= c('factor','character','factor',
#'factor','numeric',
#'factor','factor')
)
View(sampleTable)
View(sampleTable)
sampleTable <- read.table(configFile, header=TRUE
,colClasses= c('factor','character','factor',
'factor','factor')
)
sampleTable <- read.table(configFile, header=TRUE
,colClasses= c('factor','character','factor',
'factor','factor')
)
View(sampleTable)
class(sampleTable$Rata)
class(sampleTable$Grupo)
class(sampleTable$Familia)
View(sampleTable)
data <- DESeqDataSetFromHTSeqCount(sampleTable, directory=".",
design = ~ condition)
data <- DESeqDataSetFromHTSeqCount(sampleTable, directory=".",
design = ~ Grupo)
View(data)
keep <- rowSums(counts(data)) >= 10
data <- data[keep,]
View(sampleTable)
?estimateSizeFactors
dds <- estimateSizeFactors(data)
dds <- estimateDispersions(dds)
dds <- nbinomWaldTest(dds, maxit = 10000)
View(dds)
dds_raw <- counts(dds, normalized=FALSE)
dds_normalized <- counts(dds, normalized=TRUE)
#save file with counts and normalized counts
write.table(dds_raw, file=rawCountsF, quote=FALSE,
sep = "\t", col.names=NA)
write.table(dds_normalized, file=normCountsF, quote=FALSE,
sep = "\t", col.names=NA)
save(dds, file = DESEqResultsF)
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
View(vst)
mat <- assay(vst)
View(mat)
pca <- plotPCA(vst)
?plotPCA
pca <- plotPCA(vst, intgroup = "Grupo")
View(pca)
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
View(sampleTable)
data <- DESeqDataSetFromHTSeqCount(sampleTable, directory=".",
design = ~ Familia + Sexo + Grupo)
keep <- rowSums(counts(data)) >= 10
data <- data[keep,]
dds <- estimateSizeFactors(data)
dds <- estimateDispersions(dds)
dds <- nbinomWaldTest(dds, maxit = 10000)
dds_raw <- counts(dds, normalized=FALSE)
dds_normalized <- counts(dds, normalized=TRUE)
#save file with counts and normalized counts
write.table(dds_raw, file=rawCountsF, quote=FALSE,
sep = "\t", col.names=NA)
write.table(dds_normalized, file=normCountsF, quote=FALSE,
sep = "\t", col.names=NA)
save(dds, file = DESEqResultsF)
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
mat <- assay(vst)
mm <- model.matrix(~ Sexo + Familia + Grupo, colData(vst))
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo, batch2=vst$Familia, design=mm)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
mat <- assay(vst)
mm <- model.matrix(~ Sexo + Familia + Grupo, colData(vst))
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo, batch2=vst$Familia, design=mm)
assay(vst) <- mat
pca <- plotPCA(vst, intgroup = "Grupo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
?limma::removeBatchEffect
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo,
batch2=vst$Familia, design=mm, group=Grupo)
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo,
batch2=vst$Familia, design=mm, group=vst$Grupo)
assay(vst) <- mat
pca <- plotPCA(vst, intgroup = "Grupo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
mat <- limma::removeBatchEffect(mat, covariates=c(vst$Sexo, vst$Familia),
#batch=vst$Sexo,
#batch2=vst$Familia,
design=mm,
#group=vst$Grupo
)
mat <- limma::removeBatchEffect(mat, covariates=c(vst$Sexo, vst$Familia),
#batch=vst$Sexo,
#batch2=vst$Familia,
design=mm
#group=vst$Grupo
)
mat <- limma::removeBatchEffect(mat,
batch=vst$Sexo,
batch2=vst$Familia,
design=mm
#group=vst$Grupo
)
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
mat <- assay(vst)
mm <- model.matrix(~ Sexo + Familia + Grupo, colData(vst))
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo,
batch2=vst$Familia,
group=vst$Grupo)
assay(vst) <- mat
pca <- plotPCA(vst, intgroup = "Grupo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
jpeg(filename = PCAF, width=900, height=900, quality=300)
pca <- plotPCA(vst, intgroup = "Grupo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
invisble(dev.off())
dev.off()
pca <- plotPCA(vst, intgroup = "Sexo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
pca <- plotPCA(vst, intgroup = "Familia")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
#PCA
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
pca <- plotPCA(vst, intgroup = "Familia")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
pca <- plotPCA(vst, intgroup = "Sexo")
title <- "Principal Components Plot"
pca + ggtitle(title) +
geom_point(size = 6) +
theme(plot.title = element_text(size=40, hjust = 0.5, face = "bold"), axis.title=element_text(size=20),
legend.text=element_text(size=15),legend.title=element_text(size=15)) +
geom_text_repel(aes(label=colnames(vst)), size=5, point.padding = 0.6)
#PCA
vst <- varianceStabilizingTransformation(dds, blind = FALSE)
mat <- assay(vst)
mm <- model.matrix(~ Sexo + Familia + Grupo, colData(vst))
mat <- limma::removeBatchEffect(mat, batch=vst$Sexo,
batch2=vst$Familia,
group=vst$Grupo)
assay(vst) <- mat
distRL <- dist(t(mat))
distMat <- as.matrix(distRL)
hc <- hclust(distRL)
hmcol <- colorRampPalette(c("white", "blue"))(299)
title <- "Distances matrix"
jpeg(filename = distancesF, width=900, height=900, quality=300)
heatmap.2(distMat, Rowv=as.dendrogram(hc), symm=TRUE, trace="none", col=rev(hmcol),
margin=c(10, 6), main=title, key.title=NA)
invisible(dev.off())
